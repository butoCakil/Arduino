#include <U8g2lib.h>
#include <SPI.h>

// 'pngegg (1) (1)', 32x32px
const unsigned char epd_bitmap_pngegg__1___1_[] = {
  0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0xfe, 0x7f, 0x00, 0x00, 0xe7, 0xff, 0x00, 0x00, 0xe7, 0xff,
  0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff,
  0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x1f, 0x01, 0x80, 0x7f, 0x00,
  0x01, 0xc0, 0x7f, 0x00, 0x01, 0xf0, 0x7f, 0x00, 0x03, 0xfc, 0xff, 0x03, 0x07, 0xfc, 0xff, 0x03,
  0x1f, 0xff, 0x3f, 0x03, 0xff, 0xff, 0x3f, 0x00, 0xff, 0xff, 0x3f, 0x00, 0xff, 0xff, 0x3f, 0x00,
  0xfc, 0xff, 0x3f, 0x00, 0xf8, 0xff, 0x1f, 0x00, 0xf8, 0xff, 0x1f, 0x00, 0xe0, 0xff, 0x07, 0x00,
  0xc0, 0xff, 0x07, 0x00, 0x80, 0xff, 0x03, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x8f, 0x03, 0x00,
  0x00, 0x07, 0x03, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x07, 0x07, 0x00
};
// '8iEb4KGBT (1)', 32x32px
const unsigned char epd_bitmap_8iEb4KGBT__1_[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00,
  0x00, 0xfc, 0x3f, 0x00, 0x00, 0x1e, 0x71, 0x00, 0x80, 0x93, 0xd1, 0x01, 0xc0, 0x33, 0x9d, 0x03,
  0xc0, 0x1f, 0xe8, 0x03, 0x60, 0xa3, 0xc5, 0x07, 0xa0, 0x37, 0xed, 0x07, 0xf0, 0xcf, 0xf5, 0x0f,
  0xd0, 0xfc, 0x37, 0x0f, 0xd0, 0xf0, 0x1f, 0x0b, 0xd8, 0xe0, 0x0f, 0x1b, 0xf8, 0x60, 0x06, 0x1e,
  0xd8, 0x40, 0x02, 0x1a, 0xd8, 0xc0, 0x03, 0x1b, 0xf0, 0xc0, 0x03, 0x0f, 0xb0, 0xe1, 0x07, 0x0d,
  0xb0, 0x73, 0x8e, 0x0d, 0x20, 0xff, 0xff, 0x04, 0xe0, 0x5c, 0x32, 0x07, 0xc0, 0x48, 0x12, 0x03,
  0xc0, 0xe5, 0xa7, 0x03, 0x80, 0x47, 0xe2, 0x01, 0x00, 0x2e, 0x74, 0x00, 0x00, 0xfc, 0x3f, 0x00,
  0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/SCL, /* data=*/SDA, /* reset=*/U8X8_PIN_NONE);  //Software I2C

void setup(void) {
  u8g2.begin();
}

void loop(void) {
  u8g2.clearBuffer();                  // clear the internal memory
  u8g2.setFont(u8g2_font_luBIS08_tf);  // choose a suitable font
  u8g2.drawStr(0, 10, "Hello Guys!");  // write something to the internal memory
  u8g2.drawStr(0, 30, "Hello Bos!");   // write something to the internal memory
  u8g2.drawStr(0, 50, "Hello Hai!");   // write something to the internal memory
  u8g2.sendBuffer();                   // transfer internal memory to the display
  delay(2000);

  u8g2.clearBuffer();
  u8g2.drawStr(0, 10, "Halo Dyno!");
  u8g2.drawXBM(48, 16, 32, 32, epd_bitmap_pngegg__1___1_);
  u8g2.sendBuffer();
  delay(2000);

  u8g2.clearBuffer();
  u8g2.drawStr(0, 10, "Halo Speedy!");
  u8g2.drawXBM(48, 16, 32, 32, epd_bitmap_8iEb4KGBT__1_);
  u8g2.sendBuffer();
  delay(2000);
}
